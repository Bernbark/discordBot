import sys

from discord.ext import commands
from discord.ui import Select, View
import discord
# Ugly hack to allow absolute import from the root folder
# whatever its name is. Please forgive the heresy.
from src.items.food import Food
from src.items.drink import Drink


class FoodCourtSelectMenu(Select):
    def __init__(self):
        super(FoodCourtSelectMenu, self).__init__(
            placeholder="Consumables",
            max_values=1,
            options=[
                # label is required
                discord.SelectOption(label="Food",
                                     emoji="🍖",
                                     description="Food replenishes your stamina and your health."),
                discord.SelectOption(label="Drink",
                                     emoji="🍺",
                                     description="Drinks cure thirst and heal a little.")
            ]
        )

    async def callback(self, interaction: discord.Interaction):
        description = ""
        # user = interaction.user
        if self.values[0] == "Food":
            food = Food("Banana",500,"A ripe looking one too.",20,5)
            description = f"Ate a {food.name}. {food.description}\nHealed for {food.healing}\n" \
                          f"Stamina regenerated by {food.stamina}" \
                          f"Cost: {food.cost}"
        elif self.values[0] == "Drink":
            drink = Drink()
            description = f"Drank a {drink.name}. {drink.description}\nHealed for {drink.healing}\n" \
                          f"Stamina regenerated by {drink.stamina}" \
                          f"Cost: {drink.cost}"
        await interaction.response.send_message(f"{description}")


class GambleItemSelectMenu(Select):
    def __init__(self):
        super(GambleItemSelectMenu, self).__init__(
            placeholder="Items",
            options=[
                # label is required
                discord.SelectOption(label="Gamble Weapon",
                                     emoji="⚔",
                                     description="Take a chance on a new weapon!"),
                discord.SelectOption(label="Gamble Armor",
                                     emoji="🛡",
                                     description="Take a chance on some new armor!")
            ]
        )

    async def callback(self, interaction):
        description = ""
        if self.values[0] == "Gamble Weapon":
            description = "Tried to purchase but the shop isn't open yet."
        elif self.values[0] == "Gamble Armor":
            description = "Tried to purchase but the shop isn't open yet."
        await interaction.response.send_message(f"{description}")


class ShopView(View):
    def __init__(self):
        super(ShopView, self).__init__()
        self.food_shop = FoodCourtSelectMenu()
        self.add_item(self.food_shop)
        self.item_shop = GambleItemSelectMenu()
        self.add_item(self.item_shop)


class Shop(commands.Cog):
    def __init__(self, bot: commands.Bot) -> None:
        self.bot = bot

    @commands.cooldown(1, 10, commands.BucketType.user)
    @commands.command(name="shop", help="Buy from the random item shop.")
    async def shop(self, ctx: commands.Context):
        """
        Buy from the random item shop.
        """
        view = ShopView()
        await ctx.send("Shop:", view=view)


async def setup(bot: commands.Bot):

    await bot.add_cog(
        Shop(bot)
    )
